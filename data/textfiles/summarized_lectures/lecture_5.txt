1. Дорогой друг, приветствую вас на курсе знакомства с языками программирования. Сегодня мы будем изучать вводную лекцию. Мы рассмотрим языки программирования в целом, язык C#, алгоритмы и решим задачи.
2. Цель этого курса - познакомить вас с синтаксисом языка высокого уровня, дать представление о подходах к написанию базовых алгоритмов и качественного кода.
3. Предлагаю ознакомиться с планом работы на сегодня: вводная лекция, язык C#, решение задач. Вторая лекция - массивы, третья - функции, четвертая, пятая и шестая - правила хорошего кода, двумерные массивы, рекурсия.
4. Язык C# был выбран в качестве основного инструмента для решения задач на текущем курсе из-за статической типизации. Это позволяет видеть и понимать, какой тип данных у вас имеет каждая из переменных.
1. Выбор языка программирования: Python или PHP в качестве альтернативы C#.
2. Статическая типизация: доступна в языках C, C++ и Java.
3. Возможность использовать простые программы без сложного синтексиса.
4. Поддержка различных уровней сложности алгоритмов.
5. Использование платформы .NET для C# и Visual Studio Code для редактирования кода.Суммаризация:
1. Установите C-Sharp расширение для Visual Studio Code.
2. Настройте окружение для языка C-Sharp.
3. Создайте первую программу Hello World.
4. Сохраните наработки в репозитории Git.
5. Подготовьтесь к выполнению задач, изучив базовые термины из курса "Ведение в программирование".
1. Переменные в языке программирования C-Sharp могут иметь различные типы данных, такие как целочисленный, строковый и вещественный.
2. Для создания переменной необходимо указать ее тип данных, имя (идентификатор) и присвоить ей начальное значение.
3. Чтобы проверить правильность инициализации переменной, можно вывести её значение на экран с помощью метода WriteLine.
4. Для отключения каких-либо строк кода или добавления пояснения к участку программы используются комментарии.
5. В языке C-Sharp также можно создавать переменные, которые хранят дробную часть значений (вещественные числа).В данном тексте рассматриваются различные типы данных в языке C#, а также их использование для создания переменных и выполнения базовых арифметических операций. Автор приводит примеры кода, демонстрирующие работу с целочисленными, вещественными, символьными и логическими типами данных.Вывод:
1. Типы данных операндов влияют на тип данных результата сложения или умножения.
2. Если типы данных операндов совпадают, то тип данных результата будет также совпадать с типом данных этих операндов.
3. Если типы данных операндов разные, то тип данных результата будет формироваться как наиболее объемный или наиболее вместительный тип.
4. В примере использовались операции сложения и умножения с разными типами данных операндов (int, long, double).
5. Результаты вычислений были показаны на экране консоли.
1. Умножение переменных типа double и целочисленной переменной int приводит к результату с типом double.
2. Результат деления переменных типов данных у операции формируется по таким же правилам, как и в операциях сложения и умножения.
3. При делении целых чисел результат может быть дробным.
4. Для сохранения дробной части при делении необходимо использовать тип данных double для хотя бы одного операнда.
5. В языке программирования C-Sharp особенности формирования типа данных у результатов операции отсутствуют, но они присутствуют в полной мере и скрыты от разработчика.
1. Акрепления полученных навыков я даю вам домашнее задание, в котором требуется вычислить значение некоторой формулы, по сути она является дробью, числитель которой является произведением двух целых чисел, знаменатели вы можете видеть, их сумму.
2. Друзья, обратите внимание на нюансы и особенности, которые могут возникать при делении целых чисел.
3. Друзья, давайте вспомним задачу из курса «Введение в программирование», где нужно было найти вес самой тяжелой гири.
4. Напомню, на вход в эту задачу поступало 5 гирь с различными весами и требовалось определить, какая гиря самая тяжелая и вывести ее вес.
5. Перед тем как решать эту задачу, давайте решим несколько упрощенный вариант, когда гирь всего две и требуется найти вес также наиболее тяжелой гири.
1. В данном тексте рассматривается задача нахождения максимального из пяти чисел или весов гирь.
2. Алгоритм для решения этой задачи состоит в том, что мы сравниваем каждое число с текущим значением переменной max и обновляем ее значение при необходимости.
3. Для реализации этого алгоритма на языке C-Sharp создается проект в Visual Studio Code, а затем создаются 5 целочисленных переменных для хранения весов гирь и присваивается им произвольные значения.
4. Затем создается переменная max, которая изначально равна первой переменной a.
5. Далее мы сравниваем каждую из следующих переменных b, c, d, e с переменной max и обновляем ее значение при необходимости.Вот суммаризация текста:
1. Опечатки в тексте были исправлены.
2. Переменные D и E были добавлены.
3. ELSE-ветвь отсутствует, потому что нет специального действия при условии, которое окажется ложным.
4. Проверяли работу алгоритма на разных входных данных.
5. Циклы в языке C-Sharp были описаны и приведены примеры их использования в реальной жизни.
1. В тексте описывается решение задачи на языке C-sharp.
2. Задача состоит в выводе чисел от 1 до n на экран.
3. Алгоритм решения включает использование цикла while и переменной счетчика i.
4. Переменная i увеличивается на единицу каждый раз, когда цикл выполняется.
5. Цикл останавливается, когда значение переменной i равно n.
1. Сохранить наработки в репозитории Git.
2. Проиндексировать целиком созданный каталог task5.
3. Сформировать соответствующий commit.
4. Указывать имя команды git и проверять правильность указываемых ключей.
5. Отправить наработки в удаленной репозитории.